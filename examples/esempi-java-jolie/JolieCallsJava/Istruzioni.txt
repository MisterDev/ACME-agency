Server (Java)

 - Creare un nuovo progetto Maven, scegliendo packaging war, specificando groupId, artifactId e nome

 - Nel file pom.xml inserire le dipendenze di Jax-WS e build 
   (esempio di file pom.xml nella directory server)

 - Creare un package in src/main/java, e al suo interno una classe che funga da web service

 - Annotare la classe con @WebService e i metodi con @WebMethod

 - Lanciare sul progetto Run As -> Maven Install

 - Copiare il .war in target in server/wildfly-10.0.0.Final/standalone/deployments di Camunda Wildfly

 - Quando si lancia Wildfly/Camunda si ottiene l'indirizzo del deployment del web service
   (ex: http://localhost:8080/jolie-calls-java-0.0.1-SNAPSHOT/HelloService)



Client (Jolie)

 - Dopo il deployment del server, si puo' otterene il suo wsdl concatenando '?wsdl' all'indirizzo

 - Usare il comando wsdl2jolie per ottenere una interfaccia Jolie per il service
   (generateIol.sh contiene un esempio)

 - Rimuovere la prima riga del file generato al passo precedente

 - Creare un client Jolie che importi e usi l'interfaccia generata 
